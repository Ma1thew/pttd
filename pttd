#!/usr/bin/python3
import keyboard
import atexit
from gi.repository import GLib
import dbus, dbus.service
from dbus.mainloop.glib import DBusGMainLoop

OBJECT_PATH='/com/github/ma1thew/pttd'
INTERFACE_NAME='com.github.ma1thew.pttd'
BUS_NAME='com.github.ma1thew.pttd'

class PttdServiceObject(dbus.service.Object):

    def __init__(self, key_id):
        dbus.service.Object.__init__(self, dbus.service.BusName(BUS_NAME, bus=dbus.SystemBus()), OBJECT_PATH)
        self._keyIsDown = False
        self._keyID = key_id

    @dbus.service.method(INTERFACE_NAME)
    def RegisterHooks(self):
        keyboard.on_press_key(self._keyID, self.EmitKeyDown)
        keyboard.on_release_key(self._keyID, self.EmitKeyUp)

    @dbus.service.signal(INTERFACE_NAME)
    def KeyUp(self):
        pass

    @dbus.service.signal(INTERFACE_NAME)
    def KeyDown(self):
        pass

    def EmitKeyUp(self, keyEvent):
        self.KeyUp()
        self._keyIsDown = False

    def EmitKeyDown(self, keyEvent):
        if not self._keyIsDown:
            self.KeyDown()
            self._keyIsDown = True

def cleanup():
    print("Exiting...")
    GLib.MainLoop().quit()

if __name__ == '__main__':
    DBusGMainLoop(set_as_default=True)
    dbus_service = PttdServiceObject(56)
    atexit.register(cleanup)
    try:
        GLib.MainLoop().run()
    except:
        pass
