#!/usr/bin/python3
import dbus
from gi.repository import GLib
from dbus.mainloop.glib import DBusGMainLoop
import atexit
import pulsectl
import simpleaudio

OBJECT_PATH='/com/github/ma1thew/pttd'
INTERFACE_NAME='com.github.ma1thew.pttd'
BUS_NAME='com.github.ma1thew.pttd'

DEFAULT_VOLUME=1
MUTE_VOLUME=0

PTT_ACTIVATE_SOUND='/usr/share/pttd/activate.wav'
PTT_DEACTIVATE_SOUND='/usr/share/pttd/deactivate.wav'
PTT_SOUND_APPLICATIONS=['Discord'] # list of applications to play sounds when recording,
                                   # discord only captures from the microphone when connected to a channel

pulse = pulsectl.Pulse('ptt-client')
pttActivate = simpleaudio.WaveObject.from_wave_file(PTT_ACTIVATE_SOUND)
pttDeactivate = simpleaudio.WaveObject.from_wave_file(PTT_DEACTIVATE_SOUND)

def OnKeyUp():
    setVolume(MUTE_VOLUME)
    if not set([ x.proplist['application.process.binary'] for x in pulse.source_output_list() ]).isdisjoint(PTT_SOUND_APPLICATIONS):
        pttDeactivate.play()

def OnKeyDown():
    setVolume(DEFAULT_VOLUME)
    if not set([ x.proplist['application.process.binary'] for x in pulse.source_output_list() ]).isdisjoint(PTT_SOUND_APPLICATIONS):
        pttActivate.play()

def setVolume(value):
    defaultSource = pulse.server_info().default_source_name
    for source in pulse.source_list():
        if source.name == defaultSource:
            volume = source.volume
            volume.value_flat = value
            pulse.volume_set(source, volume)

def cleanup():
    setVolume(DEFAULT_VOLUME)
    pulse.close()
    GLib.MainLoop().quit()

setVolume(MUTE_VOLUME)

DBusGMainLoop(set_as_default=True)
bus = dbus.SystemBus()

dbus.Interface(bus.get_object(BUS_NAME, OBJECT_PATH), INTERFACE_NAME).RegisterHooks()
bus.add_signal_receiver(path=OBJECT_PATH, handler_function=OnKeyUp, dbus_interface=INTERFACE_NAME, signal_name='KeyUp')
bus.add_signal_receiver(path=OBJECT_PATH, handler_function=OnKeyDown, dbus_interface=INTERFACE_NAME, signal_name='KeyDown')

atexit.register(cleanup)

try:
    GLib.MainLoop().run()
except:
    pass
